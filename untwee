#!/usr/bin/env python2

from tiddlywiki import TiddlyWiki

from glob import glob
import sys


def makeOrder(wiki):
    '''Computes a linear passage order for the given story.
    '''
    tiddlers = wiki.tiddlers
    storyPassages = set(
        name
        for name, tiddler in tiddlers.iteritems()
        if tiddler.isStoryPassage()
        )
    infoPassages = set(tiddlers) - storyPassages
    ordered = []

    # Begin with the special passages, in a fixed order.
    for name in ('StoryBanner', 'StoryTitle', 'StorySubtitle', 'StoryAuthor', 'StoryCaption',
            'StoryMenu', 'MenuStory', 'MenuOptions', 'MenuShare',
            'StorySettings', 'StoryIncludes', 'StoryInit', 'PassageReady', 'PassageDone'):
        if name in infoPassages:
            ordered.append(name)
            infoPassages.remove(name)

    # Add passages with special tags, in a fixed tag order.
    for tag in ('script', 'widget', 'stylesheet', 'Twine.image', 'annotation'):
        tagged = set(passage for passage in infoPassages if tag in tiddlers[passage].tags)
        ordered.extend(sorted(tagged))
        infoPassages -= tagged

    # Append any remaining info passages.
    ordered.extend(sorted(infoPassages))

    # Append all story passages.
    ordered.extend(sorted(storyPassages))

    return ordered


def main(args):

    # read command line arguments

    sources = [
        filename
        for arg in args
        for filename in glob(arg)
        ]
    if len(sources) != 1:
        print >> sys.stderr, 'untwee: %s HTML files specified' % ('multiple' if sources else 'no')
        sys.exit(2)
    source, = sources

    # populate a TiddlyWiki

    wiki = TiddlyWiki()
    wiki.addHtmlFromFilename(source)

    # generate output

    output = wiki.toTwee(makeOrder(wiki))
    if sys.stdout.isatty():
        print output
    else:
        print output.encode('utf_8_sig')


if __name__ == '__main__':
    main(sys.argv[1:])
